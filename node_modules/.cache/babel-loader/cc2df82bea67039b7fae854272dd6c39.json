{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-multilevel-dropdown-menu-main\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Navbar from './Navbar';\nimport { useState, use } from \"react\";\nimport { Squash as Hamburger } from \"hamburger-react\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const [isOpen, setOpen] = useState(false);\n\n  const closeMenu = () => setOpen(false);\n\n  const [prevScrollpos, setPrevScrollpos] = useState(window.pageYOffset);\n  const [top, setTop] = useState(0);\n  useEffect(() => {\n    // Function to handle scroll events\n    const handleScroll = () => {\n      const currentScrollPos = window.pageYOffset;\n\n      if (prevScrollpos > currentScrollPos) {\n        setTop(0); // Show navbar\n      } else {\n        setTop(-50); // Hide navbar\n      }\n\n      setPrevScrollpos(currentScrollPos);\n    }; // Add scroll event listener when the component mounts\n\n\n    window.addEventListener('scroll', handleScroll); // Clean up by removing the event listener when the component unmounts\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollpos]);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    className: isOpen ? 'header active' : 'header',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isOpen ? 'nav-area active' : 'nav-area',\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"logo\",\n        children: \"Digichola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOpen ? 'nav-icons active' : 'nav-icons',\n        children: /*#__PURE__*/_jsxDEV(Hamburger, {\n          toggled: isOpen,\n          size: 20,\n          toggle: setOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        isOpen: isOpen,\n        closeMenu: closeMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"k2lsL1bopijv3lTaE3mAnDZ8lk4=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Navbar","useState","use","Squash","Hamburger","Link","Header","isOpen","setOpen","closeMenu","prevScrollpos","setPrevScrollpos","window","pageYOffset","top","setTop","useEffect","handleScroll","currentScrollPos","addEventListener","removeEventListener"],"sources":["D:/react-multilevel-dropdown-menu-main/src/components/Header.js"],"sourcesContent":["import React from \"react\"\nimport Navbar from './Navbar';\nimport { useState, use } from \"react\";\nimport { Squash as Hamburger } from \"hamburger-react\";\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  const [isOpen, setOpen] = useState(false);\n  const closeMenu =() => setOpen(false);\n  const [prevScrollpos, setPrevScrollpos] = useState(window.pageYOffset);\n  const [top, setTop] = useState(0);\n  useEffect(() => {\n    // Function to handle scroll events\n    const handleScroll = () => {\n      const currentScrollPos = window.pageYOffset;\n      if (prevScrollpos > currentScrollPos) {\n        setTop(0); // Show navbar\n      } else {\n        setTop(-50); // Hide navbar\n      }\n      setPrevScrollpos(currentScrollPos);\n    };\n    // Add scroll event listener when the component mounts\n    window.addEventListener('scroll', handleScroll);\n    // Clean up by removing the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollpos]);\n  return (\n    <center className={isOpen ? 'header active' : 'header'}>\n      <div className={isOpen ? 'nav-area active' : 'nav-area'}>\n        <Link to=\"/\" className=\"logo\">\n          Digichola\n        </Link>\n        <div className={isOpen ? 'nav-icons active' : 'nav-icons'}>\n            <Hamburger toggled={isOpen} size={20} toggle={setOpen} />\n        </div>\n        <Navbar isOpen={isOpen} closeMenu={closeMenu} />\n      </div>\n    </center>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,OAA9B;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,iBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,OAAT,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;;EACA,MAAMQ,SAAS,GAAE,MAAMD,OAAO,CAAC,KAAD,CAA9B;;EACA,MAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAACW,MAAM,CAACC,WAAR,CAAlD;EACA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;EACAe,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,YAAY,GAAG,MAAM;MACzB,MAAMC,gBAAgB,GAAGN,MAAM,CAACC,WAAhC;;MACA,IAAIH,aAAa,GAAGQ,gBAApB,EAAsC;QACpCH,MAAM,CAAC,CAAD,CAAN,CADoC,CACzB;MACZ,CAFD,MAEO;QACLA,MAAM,CAAC,CAAC,EAAF,CAAN,CADK,CACQ;MACd;;MACDJ,gBAAgB,CAACO,gBAAD,CAAhB;IACD,CARD,CAFc,CAWd;;;IACAN,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC,EAZc,CAad;;IACA,OAAO,MAAM;MACXL,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC;IACD,CAFD;EAGD,CAjBQ,EAiBN,CAACP,aAAD,CAjBM,CAAT;EAkBA,oBACE;IAAQ,SAAS,EAAEH,MAAM,GAAG,eAAH,GAAqB,QAA9C;IAAA,uBACE;MAAK,SAAS,EAAEA,MAAM,GAAG,iBAAH,GAAuB,UAA7C;MAAA,wBACE,QAAC,IAAD;QAAM,EAAE,EAAC,GAAT;QAAa,SAAS,EAAC,MAAvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAEA,MAAM,GAAG,kBAAH,GAAwB,WAA9C;QAAA,uBACI,QAAC,SAAD;UAAW,OAAO,EAAEA,MAApB;UAA4B,IAAI,EAAE,EAAlC;UAAsC,MAAM,EAAEC;QAA9C;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAJF,eAOE,QAAC,MAAD;QAAQ,MAAM,EAAED,MAAhB;QAAwB,SAAS,EAAEE;MAAnC;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CApCD;;GAAMH,M;;KAAAA,M;AAsCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}